generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"] // change from default
}

datasource db {
  provider = "sqlite" // d1 is sql base database
  url      = env("DATABASE_URL")
}

// Create a simple model database
model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model FacturaSinInva {
  id          String    @id @default(uuid())
  facturaId   Float     @default(0)
  code        String?
  valueCupon  Float?
  expireCupon DateTime? @default("2025-07-14T02:46:36.459Z")
  name        String
  email       String?
  phone       Int?
  isPrinted   Boolean   @default(true)
  datePrint   DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default("2025-07-14T02:46:36.459Z") @updatedAt
  address     String
  dni         Int?
  subTotal    Float
  total       Float

  products  ProductSchema[]
  discounts DiscountSchema[]
}

model ProductSchema {
  id               Int            @id @default(autoincrement())
  productId        String?
  title            String
  price            Float
  quantity         Int
  facturaSinInva   FacturaSinInva @relation(fields: [facturaSinInvaId], references: [id])
  facturaSinInvaId String
}

model DiscountSchema {
  id               Int            @id @default(autoincrement())
  title            String?
  amount           Float?
  cupon            Boolean?
  isValid          Boolean?
  facturaSinInva   FacturaSinInva @relation(fields: [facturaSinInvaId], references: [id])
  facturaSinInvaId String
}

model Categoria {
  id            String     @id @default(cuid()) // ðŸ‘ˆ clave primaria
  seoTitle      String
  categoryId    String     @unique
  img           String
  imagenPrefijo String
  title         String
  productos     Producto[] // 1:N
}

model Producto {
  id            String              @id @default(cuid())
  cantidad      Int?
  title         String?
  description   String?
  productId     String?
  categoryId    String // ahora referencia a Categoria.id
  createdAt     DateTime            @default(now()) 
  updatedAt     DateTime            @default("2025-07-14T02:46:36.459Z") @updatedAt
  categoria     Categoria           @relation(fields: [categoryId], references: [id]) // ðŸ‘ˆ cambia "categoryId" â†’ "id"
  identificador String              @unique
  docena        Boolean?
  variants      Variants_producto[]
  topicTags     TopicTag[]
}

model TopicTag {
  id         String   @id @default(cuid())
  tag        String
  productoId String
  producto   Producto @relation(fields: [productoId], references: [id], onDelete: Cascade)
}

model Variants_producto {
  id              String     @id @default(cuid())
  description     String?
  sizes_x         Float?
  sizes_y         Float?
  sizes_z         Float?
  precioDocena    Float?
  price           Float
  priceWithoutOff Float
  productoId      String
  producto        Producto   @relation(fields: [productoId], references: [id], onDelete: Cascade)
  images          Imagenes[]
  colors          Colors[]
}

model Imagenes {
  id           String            @id @default(cuid())
  isVideo      Boolean?
  needContrast Boolean?
  src          String
  variantId    String
  variant      Variants_producto @relation(fields: [variantId], references: [id], onDelete: Cascade)
}

model Colors {
  id        String            @id @default(cuid())
  name      String?
  color     String
  variantId String
  variant   Variants_producto @relation(fields: [variantId], references: [id], onDelete: Cascade)
}
